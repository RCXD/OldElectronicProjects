#include <iom128.h>
#include <intrinsics.h> // 헤더파일
#define ENABLE (PORTC |= 0x04)
#define DISABLE (PORTC &= ~0x04)

void instruction_out(unsigned char b)
{
	PORTC = b & 0xF0;	// OUT upper 4bits
	ENABLE;	// LCD Enable
	DISABLE;	// LCD Disable
		
	PORTC = (b<<4) & 0xF0;	// OUT lower 4bits
	ENABLE;	// LCD Enable
	DISABLE;	// LCD Disable

	__delay_cycles(2000);	// 2ms delay
}

void char_out(unsigned char b)
{
	PORTC = (b & 0xF0) | 0x01; 	// OUT upper 4bits
	ENABLE;	// LCD Enable
	DISABLE;	// LCD Disable
		
	PORTC = ((b<<4) & 0xF0) | 0x01; 	// OUT upper 4bits
	ENABLE;	// LCD Enable
	DISABLE;	// LCD Disable

	__delay_cycles(2000);	// 2ms delay
}

void string_out(unsigned char b, unsigned char *str)
{
		unsigned int i = 0;
		
		instruction_out(b);
		
		do{
				char_out(str[i]);
		}while(str[++i] != '\0');
}

void init_CLCD(void)
{
	DDRC = 0xFF;
	PORTC = 0xFF;
	__delay_cycles(2000);	// 2ms delay
        
	__delay_cycles(1000);	// 1ms delay	

	instruction_out(0x28);	// LCD Function Set(16x2 Line, 4Bit, 5x8 DOT)
	__delay_cycles(2000);	// 2ms delay

	instruction_out(0x28);	// LCD Function Set(16x2 Line, 4Bit, 5x8 DOT)
	__delay_cycles(2000);	// 2ms delay

	instruction_out(0x0C);	// LCD Display ON, Cursor OFF, Blink OFF
	instruction_out(0x06);	// LCD Entry Mode Set
	instruction_out(0x02);  // Return home
	instruction_out(0x01);	// LCD Clear
}

void main(void)
{
unsigned char a, b, c, d, result;
DDRA = 0xFF;
PORTA = 0xFF;
PORTC=0xFF; //CLCD 동작 PORT 설정
DDRF &= 0xFE;

ADMUX= 0x27;
ADCSR = 0xA7;
ADCSR |= 0x40;

 init_CLCD();  // 초기화
  
  instruction_out(0x02);	// LCD Clear
  


while(1) 
{
  
__delay_cycles(8000);
while((ADCSR & 0x10)==0);
ADCSR |= 0x10;
result=ADCH;
PORTA = result;

a=result/1000;
b=(result-1000*a)/100;
c=(result-1000*a-100*b)/10;
d=(result-1000*a-100*b-10*c);

instruction_out (0x80);  
char_out('0'+a);
instruction_out (0x81);  
char_out('0'+b);
instruction_out (0x82);  
char_out('0'+c);
instruction_out (0x83);  
char_out('0'+d);

__delay_cycles(8000);
}
}
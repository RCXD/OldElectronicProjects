
frob.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000150  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a58  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000084d  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000389  00000000  00000000  000014e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001874  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042d  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b8  00000000  00000000  00001ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001e9d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	28 d0       	rcall	.+80     	; 0xea <main>
  9a:	58 c0       	rjmp	.+176    	; 0x14c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <step_init>:
		_delay_ms(100);
		//PORTA &= ~STP_CLK;
		//_delay_ms(duty_ms);
		PORTA &= 0x00;
		_delay_ms(100);
		--pulses;
  9e:	9c 01       	movw	r18, r24
  a0:	9a b3       	in	r25, 0x1a	; 26
  a2:	9f 65       	ori	r25, 0x5F	; 95
  a4:	9a bb       	out	0x1a, r25	; 26
  a6:	d5 98       	cbi	0x1a, 5	; 26
  a8:	1b ba       	out	0x1b, r1	; 27
  aa:	9b b3       	in	r25, 0x1b	; 27
  ac:	98 7b       	andi	r25, 0xB8	; 184
  ae:	9b bb       	out	0x1b, r25	; 27
  b0:	22 30       	cpi	r18, 0x02	; 2
  b2:	31 05       	cpc	r19, r1
  b4:	81 f0       	breq	.+32     	; 0xd6 <step_init+0x38>
  b6:	24 f4       	brge	.+8      	; 0xc0 <step_init+0x22>
  b8:	21 30       	cpi	r18, 0x01	; 1
  ba:	31 05       	cpc	r19, r1
  bc:	41 f0       	breq	.+16     	; 0xce <step_init+0x30>
  be:	08 95       	ret
  c0:	23 30       	cpi	r18, 0x03	; 3
  c2:	31 05       	cpc	r19, r1
  c4:	59 f0       	breq	.+22     	; 0xdc <step_init+0x3e>
  c6:	24 30       	cpi	r18, 0x04	; 4
  c8:	31 05       	cpc	r19, r1
  ca:	59 f0       	breq	.+22     	; 0xe2 <step_init+0x44>
  cc:	08 95       	ret
  ce:	8b b3       	in	r24, 0x1b	; 27
  d0:	88 61       	ori	r24, 0x18	; 24
  d2:	8b bb       	out	0x1b, r24	; 27
  d4:	08 95       	ret
  d6:	dc 9a       	sbi	0x1b, 4	; 27
  d8:	db 98       	cbi	0x1b, 3	; 27
  da:	08 95       	ret
  dc:	dc 98       	cbi	0x1b, 4	; 27
  de:	db 9a       	sbi	0x1b, 3	; 27
  e0:	08 95       	ret
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	87 7e       	andi	r24, 0xE7	; 231
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	08 95       	ret

000000ea <main>:

int main(void)
{
	while(1)
	{
		step_init(HALF);
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	d7 df       	rcall	.-82     	; 0x9e <step_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f0:	2f ef       	ldi	r18, 0xFF	; 255
  f2:	89 e6       	ldi	r24, 0x69	; 105
  f4:	98 e1       	ldi	r25, 0x18	; 24
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0xc>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x16>
 100:	00 00       	nop
		_delay_ms(1000);
		step_init(QUARTER);
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	cb df       	rcall	.-106    	; 0x9e <step_init>
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	89 e6       	ldi	r24, 0x69	; 105
 10c:	98 e1       	ldi	r25, 0x18	; 24
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0x24>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x2e>
 118:	00 00       	nop
		_delay_ms(1000);
		step_init(EIGHTH);
 11a:	83 e0       	ldi	r24, 0x03	; 3
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	bf df       	rcall	.-130    	; 0x9e <step_init>
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	89 e6       	ldi	r24, 0x69	; 105
 124:	98 e1       	ldi	r25, 0x18	; 24
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <main+0x3c>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0x46>
		_delay_ms(1000);
		step_init(SIXTEENTH);
 130:	00 00       	nop
 132:	84 e0       	ldi	r24, 0x04	; 4
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	b3 df       	rcall	.-154    	; 0x9e <step_init>
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	89 e6       	ldi	r24, 0x69	; 105
 13c:	98 e1       	ldi	r25, 0x18	; 24
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <main+0x54>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0x5e>
 148:	00 00       	nop
 14a:	cf cf       	rjmp	.-98     	; 0xea <main>

0000014c <_exit>:
 14c:	f8 94       	cli

0000014e <__stop_program>:
 14e:	ff cf       	rjmp	.-2      	; 0x14e <__stop_program>
